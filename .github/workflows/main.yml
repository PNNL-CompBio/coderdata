name: CI

on:
  push:
    branches:
      - builder_branch_JJ

jobs:
  build-hcmi:
    runs-on: ubuntu-20.04
    environment: build
    steps:
      - name: Checkout  HCMI
        uses: actions/checkout@v2
      # - name: Build HCMI Image
      #   run: docker build -t hcmi-builder -f docker/Dockerfile.hcmi .
      # - name: Run HCMI Container
      #   run: docker run --name hcmi-container hcmi-builder
      # - name: Copy files from HCMI Container
      #   run: |
      #     mkdir hcmi-files
      #     for file in hcmi_samples.csv hcmi_transcriptomics.csv hcmi_copy_number.csv hcmi_mutations.csv; do
      #       docker cp hcmi-container:/usr/src/app/$file hcmi-files/$file
      #     done
      # - name: Get HCMI container logs
      #   run: docker logs hcmi-container
      - name: dummy hcmi
        run: |
          mkdir hcmi-files
          touch hcmi-files/d.txt hcmi-files/bc.gz
      - name: Upload artifacts for HCMI
        uses: actions/upload-artifact@v2
        with:
          name: hcmi-files
          path: hcmi-files


  build-beataml:
    runs-on: ubuntu-20.04
    environment: build
    steps:
      - name: Checkout code BeatAML
        uses: actions/checkout@v2
      # - name: Build BeatAML Image
      #   run: docker build -t beataml-builder -f docker/Dockerfile.beataml .
      # - name: Run BeatAML Container
      #   run: docker run --name beataml-container -e SYNAPSE_TOKEN=${{ secrets.SYNAPSE_TOKEN_SECRET }} beataml-builder
      # - name: Copy files from BeatAML Container
      #   run: |
      #     mkdir beataml-files
      #     for file in beataml_samples.csv beataml_transcriptomics.csv beataml_proteomics.csv beataml_mutations.csv beataml_drugs.tsv beataml_experiments.csv; do
      #       docker cp beataml-container:/usr/src/app/$file beataml-files/$file
      #     done
      # - name: Get BeatAML container logs
      #   run: docker logs beataml-container
      - name: dummy beataml
        run: |
          mkdir beataml-files
          touch beataml-files/a.tsv beataml-files/b.csv
      - name: Upload artifact for BeatAML
        uses: actions/upload-artifact@v2
        with:
          name: beataml-files
          path: beataml-files

  upload-to-figshare:
      needs: [build-hcmi, build-beataml]
      runs-on: ubuntu-20.04
      if: always()
      steps:
        - name: Download artifacts from HCMI
          uses: actions/download-artifact@v2
          with:
            name: hcmi-files
        - name: Download artifacts from BeatAML
          uses: actions/download-artifact@v2
          with:
            name: beataml-files
        - name: Create all-files directory
          run: mkdir all-files
        - name: List files cwd
          run: ls -lah 
        - name: Move files to all-files
          run: |
            rsync -av --remove-source-files --include='*.csv' --include='*.tsv' --include='*.gz' --exclude='*' . all-files/
        - name: List files in all-files
          run: ls -lah all-files/
        - name: List files in ~
          run: ls -lah ~
        - name: List files in ..
          run: ls -lah ..
        - name: List files in ../..
          run: ls -lah ../..
        - name: List files in ../../..
          run: ls -lah ../../..
        - name: List files in ../../../..
          run: ls -lah ../../../..
        - name: List files in ~/work
          run: ls -lah ~/work
        - name: List files in ~/runners
          run: ls -lah ~/runners
        - name: List files in ~/work/*
          run: ls -lah ~/work/*
        - name: List files in ~/work/*/*
          run: ls -lah ~/work/*/*
        - name: echo path
          run: echo $PATH
        - name: list /home/runner/work/coderdata/coderdata/*
          run: ls -lah /home/runner/work/coderdata/coderdata/*
        - name: list /home/runner/work/coderdata/coderdata/*/*
          run: ls -lah /home/runner/work/coderdata/coderdata/*/*
        - name: list ../../../*
          run: ls -lah ../../../*
        - name: pwd 
          run: pwd
        # - name: Upload to Figshare
        #   run: python scripts/push_to_figshare.py --directory all-files --title "CODERData${{ github.event.release.tag_name }}" --token ${{ secrets.FIGSHARE_TOKEN_SECRET }} -p False
