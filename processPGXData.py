'''
This is a script that leverages PHarmacogx R package as well as the curve.py script
to collect all the data into a single file for CANDLE
_author_='Sara Gosline'
_email_ = 'sara.gosline@pnnl.gov'
'''

import pandas as pd
import os

datasets = ['prism','tavor','fimm','beatAML','UHNBreast','gbm','gray','pdtx']

datasets = ['prism','beatAML']
#empty list of files

#the following are experiment specific and can be duplicated
dose_files = []
gex_files = []
cnv_files = []
mut_files = []

## the following refernece specific, and should be joined, not appended
samp_files = []
gene_files = []
drug_files = []

'''
Step 1: we iterate through every dataset and pull it from pharmacogx
'''
for dat in datasets:
  print("Analyzing "+dat+' dataset')
  
  #this will generate all the files below except the summary stats (which are generated by python)
  rcmd = 'Rscript pgx/'+dat+'dataFormat.R'
  
  ##this will fit the curve
  dose_rep = 'python ../curve/fit_curve.py --input '+dat+'doseResponse.csv --output '+dat+'drugSummaryStats.csv'

  ##run the commands
  os.system(rcmd)
  os.system(dose_rep)
  
  ##add the files to the list
  dose_files.append(dat+'drugSummaryStats.csv')
  gex_files.append(dat+'geneExpression.csv')
  cnv_files.append(dat+'copyNumber.csv')
  mut_files.append(dat+'mutations.tsv')
  
  #the reference files will be kept separate
  samp_files.append(dat+'samples.csv')
  gene_files.append(dat+'genes.csv')
  drug_files.append(dat+'drugs.csv')


'''
Step 2: create the reference genes/samples/drugs

'''

print('No we can append all the files into one, and do the appropriate joins')

##irst we have to collect the genes, samples, and drugs into a single dictionary to format
gene_dict={}
drug_dict={}
samp_dict={}


'''
Step 3
Using the gene/drug/sample identifiers, map the experiment-specific data

'''
